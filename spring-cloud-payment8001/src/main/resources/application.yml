server:
  port: 8001

spring:
  application:
    name: cloud-payment-service

  # druid连接池配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud_db?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&useSSL=false&tinyInt1isBit=false&serverTimezone=GMT%2B8
    username: root
    password: root
    druid:
      # 设置连接属性
      # connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 初始化大小,最小,最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 30000
      # 查询超时时间,这里不进行设置,在mybatis中设置
      # query-timeout: 30
      # 打开PSCache,并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 校验查询
      validation-query: SELECT 'x'
      # 默认false,建议配置为true,不影响性能,并且保证安全性.申请连接的时候检测,如果空闲时间大于timeBetweenEvictionRunsMillis,执行validationQuery检测连接是否有效.
      test-while-idle: true
      # 默认true,申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能.
      test-on-borrow: false
      # 默认false,归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
      test-on-return: false
      # Destroy线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis,则关闭当前连接.
      min-evictable-idle-time-millis: 300000
      # 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 连接使用超过时间限制是否回收
      remove-abandoned: false
      # 指定连接建立多长时间就需要被强制关闭（单位秒）,目前为5分钟,如果有业务处理时间超过5分钟,可以适当调整.
      remove-abandoned-timeout: 300
      # 连接回收的时候控制台打印信息,测试环境可以加上true,线上环境false.会影响性能.
      log-abandoned: false
      # Druid监控配置
      # 下面配置说明请参考Druid Github Wiki,配置_配置WebStatFilter
      name: druid
      # 配置监控统计拦截的filters,去掉后监控界面sql无法统计,wall用于防火墙
      filters: stat,wall
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
      # Druid监控后台页面http://localhost:8080/druid/login.html
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: druid
        login-password: druid

mybatis:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: cn.bdqn.*.

eureka:
  instance:
    instance-id: payment8001
#    访问路径可以显示ip地址
    prefer-ip-address: true
    #    发送心跳间隔时间,单位秒(默认30秒)
#    lease-renewal-interval-in-seconds: 30
    #    最后一次心跳后等待时间上限,单位秒(默认90秒),超时移除该服务
#    lease-expiration-duration-in-seconds: 90
  client:
#    false表示不向注册中心注册自己
    register-with-eureka: true
#    false表示自己端就是注册中心,我的职责就是维护服务实例,并不需要去检索服务
    fetch-registry: true
    service-url:
#      默认的区,表示入住哪个eureka服务 单机版
#      defaultZone: http://eureka7001.com:7001/eureka
#      默认的区,表示入住哪个eureka服务 集群版
        defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka